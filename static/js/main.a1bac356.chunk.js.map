{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","goods","useState","isVisible","setStart","isReverse","setReverse","default","sortBy","setSortBy","name","sort","good1","good2","localeCompare","length","reverse","className","type","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"wJAgBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,eAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,IAAIC,EAAK,UAAOF,GAEhB,EAA8BG,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,mBAASJ,EAAOS,SAA5C,mBAAOC,EAAP,KAAeC,EAAf,KAmBA,OAAQD,GACN,KAAKV,EAAOY,KACVT,EAAMU,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACjD,MACF,KAAKf,EAAOiB,OACVd,EAAMU,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAClD,MACF,QACEd,EAAK,UAAOF,GAOhB,OAJIM,GACFJ,EAAMe,UAIN,sBAAKC,UAAU,gDAAf,WACId,GACA,wBACEe,KAAK,SACLD,UAAU,sBACVE,QAtCM,WACZf,GAAS,SAAAgB,GAAI,OAAKA,MAkCd,mBAQDjB,GACC,gCACE,oBAAIc,UAAU,OAAd,SACGhB,EAAMoB,KAAI,SAACC,GAAD,OACT,oBAAeL,UAAU,YAAzB,SACGK,GADMA,QAKb,gCACE,wBACEJ,KAAK,SACLD,UAAU,yBACVE,QApDI,WACdb,GAAW,SAAAc,GAAI,OAAKA,MAgDZ,qBAQA,wBACEF,KAAK,SACLD,UAAU,yBACVE,QAxDO,WACjBV,EAAUX,EAAOY,OAoDT,iCAQA,wBACEQ,KAAK,SACLD,UAAU,yBACVE,QA5DE,WACZb,GAAW,GACXG,EAAUX,EAAOS,UAuDT,6BC/FZgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.a1bac356.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  default,\n  name,\n  length,\n}\n\nexport const App: React.FC = () => {\n  let goods = [...goodsFromServer];\n\n  const [isVisible, setStart] = useState(false);\n  const [isReverse, setReverse] = useState(false);\n  const [sortBy, setSortBy] = useState(SortBy.default);\n\n  const start = () => {\n    setStart(prev => !prev);\n  };\n\n  const reverse = () => {\n    setReverse(prev => !prev);\n  };\n\n  const sortByName = () => {\n    setSortBy(SortBy.name);\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setSortBy(SortBy.default);\n  };\n\n  switch (sortBy) {\n    case SortBy.name:\n      goods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortBy.length:\n      goods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      goods = [...goodsFromServer];\n  }\n\n  if (isReverse) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"App container.is-widescreen has-text-centered\">\n      {!isVisible && (\n        <button\n          type=\"button\"\n          className=\"button is-link mt-6\"\n          onClick={start}\n        >\n          Start\n        </button>\n      )}\n      {isVisible && (\n        <div>\n          <ul className=\"my-5\">\n            {goods.map((good) => (\n              <li key={good} className=\"is-size-5\">\n                {good}\n              </li>\n            ))}\n          </ul>\n          <div>\n            <button\n              type=\"button\"\n              className=\"button is-primary mx-5\"\n              onClick={reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary mx-5\"\n              onClick={sortByName}\n            >\n              Sort Alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary mx-5\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}